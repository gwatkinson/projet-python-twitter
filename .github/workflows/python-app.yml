# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# and https://github.community/t/run-job-only-if-folder-changed/118292

name: Python application

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  check_python:
    name: Check python files

    outputs:
      run_job: ${{ steps.check_files_python.outputs.run_job }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check modified files
        id: check_files_python
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file != projet_python_twitter/* && $file != test/* ]]; then
              echo "This modified file is not under the 'projet_python_twitter' or the 'test' folder."
              echo "::set-output name=run_job::false"
              # break
            else
              echo "::set-output name=run_job::true"
              break
            fi
          done < files.txt

  build:
    name: Test the modules if some files changed

    needs: check_python

    runs-on: ubuntu-latest

    if: needs.check_python.outputs.run_job == 'true'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install flake8 pytest pytest-cov pdoc3
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest -rxXs -v test/

      - name: Test coverage with pytest-cov
        run: |
          pytest --cov="." test/

      - name: Generate documentation
        run: |
          pdoc --html -f --output-dir docs projet_python_twitter
          mv docs/projet_python_twitter/* docs
          rmdir docs/projet_python_twitter

      - name: Check if docs files changed
        id: check_files_docs
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file != docs/* ]]; then
              echo "This modified file is not under the 'docs' folder."
              echo "::set-output name=run_doc::false"
              # break
            else
              echo "::set-output name=run_doc::true"
              break
            fi
          done < files.txt

      - name: Commit files if changed
        if: steps.check_files_docs.outputs.run_doc == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Update documentation automatically" -a

      - name: Push changes
        if: steps.check_files_docs.outputs.run_doc == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
